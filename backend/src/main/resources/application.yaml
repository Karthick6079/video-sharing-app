spring:
  profiles:
    active: local

server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: local
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: videoStreamingDB
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB
  services:
    path: /api/youtube
  cloud:
    aws:
      profile: default
      region: ap-south-1
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://karthick-v.us.auth0.com/
          audience: https://api.avkarthick.in  
  auth:
    user-info-endpoint: https://karthick-v.us.auth0.com/userinfo
  aws-s3:
    bucket-name: amzn-s3-videostreaming-app-bucket
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379
    timeout: 6000
    lettuce:
      pool:
        max-active: 10
        max-idle: 5
        min-idle: 1
---
spring:
  config:
    activate:
      on-profile: migrate-timestamps
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: videoStreamingDB
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB
  services:
    path: /api/youtube
  cloud:
    aws:
      profile: default
      region: ap-south-1
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://karthick-v.us.auth0.com/
          audience: https://api.avkarthick.in
  auth:
    user-info-endpoint: https://karthick-v.us.auth0.com/userinfo
  aws-s3:
    bucket-name: amzn-s3-videostreaming-app-bucket
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379
    timeout: 6000
    lettuce:
      pool:
        max-active: 10
        max-idle: 5
        min-idle: 1

---
spring:
  config:
    activate:
      on-profile: thumbnail-generate
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: videoStreamingDB
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB
  services:
    path: /api/youtube
  cloud:
    aws:
      profile: default
      region: ap-south-1
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://karthick-v.us.auth0.com/
          audience: https://api.avkarthick.in
  auth:
    user-info-endpoint: https://karthick-v.us.auth0.com/userinfo
  aws-s3:
    bucket-name: amzn-s3-videostreaming-app-bucket
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379
    timeout: 6000
    lettuce:
      pool:
        max-active: 10
        max-idle: 5
        min-idle: 1

---
spring:
  config:
    activate:
      on-profile: cloud
  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: videoStreamingDB
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB
  services:
    path: /api/youtube
  cloud:
    aws:
      region: ap-south-1
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://karthick-v.us.auth0.com/
          audience: https://api.avkarthick.in
  auth:
    user-info-endpoint: https://karthick-v.us.auth0.com/userinfo
  aws-s3:
    bucket-name: ${AWS_S3_BUCKET_NAME}
  cache:
    type: redis
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    timeout: 6000
    lettuce:
      pool:
        max-active: 10
        max-idle: 5
        min-idle: 1




    


